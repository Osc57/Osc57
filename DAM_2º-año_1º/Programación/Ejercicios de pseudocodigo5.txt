Ej1
Proceso DefinirVectores
	Definir vector_numeros Como Entero;
	Dimension vector_numeros[10];
	Definir indice Como Entero;
	Para indice<-0 hasta 9 hacer
		vector_numeros[indice]<-aleatorio(1,10);
	FinPara
	Para indice<-0 hasta 9 hacer
		Escribir vector_numeros[indice]," ",vector_numeros[indice]^2," ",vector_numeros[indice]^3;
	FinPara
FinProceso

Ej2
Proceso VectorCadenaCaracteres
	Definir vector1,vector2 Como Cadenas;
	Dimension vector1[5],vector2[5];
	Definir indicador1,indicador2 Como Entero;
	Definir tam_vector1,tam_vector2 Como Entero;
	tam_vector1<-5;
	tam_vector2<-5;
	Para indicador1<-0 hasta tam_vector1-1 hacer
		Escribir "Dame la cadena ",indicador1+1,":";
		Leer vector1[indicador1];
	FinPara
	indicador2<-0;
	Para indicador1<-tam_vector1-1 hasta 0 con paso -1 hacer
		vector2[indicador2]<-vector1[indicador1];
		indicador2<-indicador2+1;
	FinPara
	Para indicador2<-0 hasta tam_vector2-1 hacer
		Escribir "La cadena ",indicador2+1,": ",vector2[indicador2];
	FinPara
FinProceso

Ej3
Proceso VectorNotas
	Definir notas Como Entero;
	Dimension notas[5];
	Definir tam_notas como Entero;
	Definir nota_media Como Real;
	Definir suma,nota_max,nota_min como Entero;
	Definir indice Como Entero;
	
	tam_notas<-5;
	Para indice<-0 hasta tam_notas-1 hacer
		//Valido que sea un número >=0 y <=10.
		Repetir
			Escribir sin saltar "Introduce la nota ",indice+1,": ";
			Leer notas[indice];
		Hasta Que notas[indice]>=0 Y notas[indice]<=10;
	FinPara
	nota_max<-notas[0];
	nota_min<-notas[0];
	
	suma<-0;
	Para indice<-0 hasta tam_notas-1 hacer
		suma<-suma+notas[indice];
		Si notas[indice]>nota_max Entonces
				nota_max<-notas[indice];
			FinSi
		Si notas[indice]<nota_min Entonces
			nota_min<-notas[indice];
		FinSi
	FinPara
	nota_media<-suma/tam_notas;
	Escribir "";
	Escribir sin Saltar "Notas:";
	Para indice<-0 hasta tam_notas-1 hacer
		Escribir sin Saltar notas[indice]," ";
	FinPara
	Escribir "";
	Escribir "Nota media: ",nota_media;
	Escribir "Nota máxima: ",nota_max;
	Escribir "Nota mínima: ",nota_min;
FinProceso

Ej4






































